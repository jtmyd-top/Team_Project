"""
Django settings for Team_Project project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.joinpath('knowledge_project')
from pathlib import Path
from dotenv import load_dotenv
# Build paths inside the project like this: BASE_DIR / 'subdir'.
subfolder_path = Path(__file__).resolve().parent.parent

# 2. 添加这一行来加载 .env 文件
# 这会在与 settings.py 同级的目录中寻找 .env 文件
load_dotenv(os.path.join(Path(__file__).resolve().parent, '.env'))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*$#^k@n)u)f1bqz99t&i!@qd#d_&-#dmft8cgdlalxviypg19j'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'knowledge_project.apps.KnowledgeProjectConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
#    'ckeditor',
    'ckeditor_uploader',
    'django_ckeditor_5'
#    'django_json_widget',
#    'knowledge_project',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Team_Project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Team_Project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'knowledge_project',       # 确保你已在MySQL中创建了这个数据库
        'USER': os.getenv('mysql_user') ,       # <-- 替换成你的MySQL用户名
        'PASSWORD': os.getenv('mysql_passwd'), # <-- 替换成你的MySQL密码
        'HOST': os.getenv('mysql_ip'),
        'PORT': os.getenv('mysql_port'),
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            #'mysql_version': '5.7',  # 设置数据库版本为 5.7
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# 添加下面这行代码
# 它告诉Django，我们的项目级静态文件存放在根目录下的 'static' 文件夹中
STATICFILES_DIRS = [
    BASE_DIR / 'knowledge_project/static', # 将反斜杠 \ 改为正斜杠 /
]
MEDIA_URL = '/uploads/'

# MEDIA_ROOT 是文件上传在服务器上的物理存储位置
# 这行代码会在您的项目根目录下创建一个名为 "uploads" 的文件夹来存放所有上传内容
MEDIA_ROOT = os.path.join(BASE_DIR, 'uploads')
CKEDITOR_UPLOAD_PATH = 'ckeditor_img'
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'home'
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Custom',  # 工具条功能
        'height': 300,  # 编辑器高度
        'width': 800,  # 编辑器宽
        'toolbar_Custom':[
            ['Source','Bold', 'Italic', 'Underline', 'Blockquote','Format','Font','FontSize'],
            ['TextColor','BGColor','Image','Smiley' ,'Link', 'Unlink','PasteFromWord'],
            ['JustifyCenter','JustifyRight','JustifyBlock']
        ]
    },
}
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# 修正2：确保从环境变量加载的值被转换为正确的类型
EMAIL_HOST = os.getenv('EMAIL_HOST')          # 例如：'smtp.qq.com'
EMAIL_PORT = int(os.getenv('EMAIL_PORT', 587)) # 转换为整数，如果未设置则默认为 587
EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS', 'True').lower() in ['true', '1', 't'] # 转换为布尔值
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')      # 您的发件邮箱
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_PASSWORD') # 您的邮箱授权码，不是登录密码

# 建议设置，与发件人保持一致
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        # 作用：检查密码是否与用户的个人信息（如用户名、邮箱）过于相似。
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        # 作用：检查密码是否满足最小长度要求（默认为8位）。
        'OPTIONS': {
            'min_length': 9, # 你可以在这里自定义最小长度
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        # 作用：检查密码是否在一个常见的密码列表里（如 '123456', 'password'）。
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        # 作用：检查密码是否完全由数字组成。
    },
]
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": os.getenv('redis'), # /1 表示使用Redis的1号数据库
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}
# settings.py

# 当未登录用户访问需要登录的页面时，会被重定向到这个URL。
# 它的值应该是你登录URL的名称。
LOGIN_URL = 'login'

# 用户成功登录后，如果没有指定下一个跳转页面，默认会跳转到这里。
LOGIN_REDIRECT_URL = 'home' # 假设你的首页URL名称是'home'

# 用户成功登出后，默认会跳转到这里。
LOGOUT_REDIRECT_URL = 'home'
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        # 格式: redis://:密码@主机:端口/数据库编号
        # 如果Redis和Django运行在同一台服务器上，主机就是127.0.0.1
        "LOCATION": os.getenv('redis1'),
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "CONNECTION_POOL_KWARGS": {"max_connections": 100},
            # 增加一个密码选项，更明确
            "PASSWORD": os.getenv('mysql_passwd'),
        }
    }
}

customColorPalette = [
    {
        'color': 'hsl(4, 90%, 58%)',
        'label': 'Red'
    },
    {
        'color': 'hsl(340, 82%, 52%)',
        'label': 'Pink'
    },
    {
        'color': 'hsl(291, 64%, 42%)',
        'label': 'Purple'
    },
    {
        'color': 'hsl(262, 52%, 47%)',
        'label': 'Deep Purple'
    },
    {
        'color': 'hsl(231, 48%, 48%)',
        'label': 'Indigo'
    },
    {
        'color': 'hsl(207, 90%, 54%)',
        'label': 'Blue'
    },
]

CKEDITOR_5_CONFIGS = {
    'default': {
        'toolbar': ['heading', '|', 'bold', 'italic', 'link',
                    'bulletedList', 'numberedList', 'blockQuote', 'imageUpload', ],

    },
    'extends': {
        'blockToolbar': [
            'paragraph', 'heading1', 'heading2', 'heading3',
            '|',
            'bulletedList', 'numberedList',
            '|',
            'blockQuote',
        ],
        'toolbar': ['heading', '|', 'outdent', 'indent', '|', 'bold', 'italic', 'link', 'underline', 'strikethrough',
                    'code', 'subscript', 'superscript', 'highlight', '|', 'codeBlock', 'sourceEditing', 'insertImage',
                    'bulletedList', 'numberedList', 'todoList', '|', 'blockQuote', 'imageUpload', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'mediaEmbed', 'removeFormat',
                    'insertTable', ],
        'image': {
            'toolbar': ['imageTextAlternative', '|', 'imageStyle:alignLeft',
                        'imageStyle:alignRight', 'imageStyle:alignCenter', 'imageStyle:side', '|'],
            'styles': [
                'full',
                'side',
                'alignLeft',
                'alignRight',
                'alignCenter',
            ]

        },
        'table': {
            'contentToolbar': ['tableColumn', 'tableRow', 'mergeTableCells',
                               'tableProperties', 'tableCellProperties'],
            'tableProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            },
            'tableCellProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            }
        },
        'heading': {
            'options': [
                {'model': 'paragraph', 'title': 'Paragraph', 'class': 'ck-heading_paragraph'},
                {'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1'},
                {'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2'},
                {'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3'}
            ]
        }
    },
    'list': {
        'properties': {
            'styles': 'true',
            'startIndex': 'true',
            'reversed': 'true',
        }
    }
}

